#!/bin/sh
# cp  git-hooks/pre-commit .git/hooks/ 
# chmod +x .git/hooks/pre-commit
# git config core.hooksPath .git/hooks
# icacls .git\hooks\pre-commit /grant Everyone:RX
# To enable gitleaks check
# git config hooks.gitleaks true
# To disable gitleaks check
# git config hooks.gitleaks false

# Function to check if gitleaks is installed
check_gitleaks() {
  if ! command -v gitleaks &> /dev/null; then
    determine_os
    case $OS in
      windows)
        INSTALL_DIR="$(git rev-parse --git-dir)/hooks"
        GITLEAKS_EXE="$INSTALL_DIR/gitleaks"
        if [ -e "$GITLEAKS_EXE" ]; then
          echo "gitleaks found in: $INSTALL_DIR"
        else
          echo "gitleaks not found. Installing..."
          install_gitleaks
        fi
        ;;
      *)
        echo "gitleaks not found or unsupported OS: $OS"
        install_gitleaks
        ;;
    esac
  else
    echo "gitleaks is already installed."
  fi
}

# Function to install gitleaks
install_gitleaks() {
  determine_os
  case $OS in
    linux)
      download_and_install "https://github.com/gitleaks/gitleaks/releases/download/v8.18.1/gitleaks_8.18.1_linux_x64.tar.gz"
      ;;
    darwin)
      download_and_install "https://github.com/gitleaks/gitleaks/releases/download/v8.18.1/gitleaks_8.18.1_darwin_x64.tar.gz"
      ;;
    windows)
      download_and_install "https://github.com/gitleaks/gitleaks/releases/download/v8.18.1/gitleaks_8.18.1_windows_x64.zip"
      powershell.exe -ExecutionPolicy Bypass -File git-hooks/install-gitleaks.ps1 -InstallDir $INSTALL_DIR -DownloadLink $DOWNLOAD_LINK
      ;;
    *)
      echo "Unsupported OS: $OS"
      exit 1
      ;;
  esac
}

# Function to download and install gitleaks
download_and_install() {
  DOWNLOAD_LINK=$1
  INSTALL_DIR="$(git rev-parse --git-dir)/hooks"
  
  # Create the installation directory if it doesn't exist
  mkdir -p "$INSTALL_DIR"

  if command -v powershell.exe &> /dev/null; then
    # Windows OS detected, use PowerShell script for installation
    powershell -ExecutionPolicy Bypass -File git-hooks/install-gitleaks.ps1
  else
    # Download and extract gitleaks for Linux or macOS
    curl -sSfL $DOWNLOAD_LINK | tar xvz -C "$INSTALL_DIR"

    # Make gitleaks executable
    chmod +x "$INSTALL_DIR/gitleaks"

    echo "Gitleaks installed to: ${INSTALL_DIR}"
  fi
}



# Function to determine OS and architecture
determine_os() {
  if command -v tasklist &> /dev/null; then
    OS="windows"
  else
    OS=$(uname | tr '[:upper:]' '[:lower:]')
  fi
}

# Check and install gitleaks
check_gitleaks

# Check if gitleaks is enabled
if [ "$(git config --get hooks.gitleaks)" = "true" ]; then
  # Run gitleaks
  "$INSTALL_DIR/gitleaks" detect -v --no-git
fi